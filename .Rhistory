hablar::set_wd_to_script_path()
# meta analysis workshop prep
library(tidyverse)
library(lme4)
library(sjPlot)
# effect size from LMM
load("./not_shared/exam_data.RData")
str(d1)
m0 <- d1 %>%
filter(year_of_study=="2") %>%
lmer(mark ~ gender + (1|student) + (1|module), data=.)
model_summary <- print(summary(m0))
d1 %>%
filter(year_of_study=="2") %>%
group_by(gender) %>%
summarise(N=n())
model_summary
fixef(m0)
summary(m0)$fixe
# example 1 meta-analysis
library(metaBMA)
data(power_pose)
str(power_pose)
pwr_bk <- power_pose
power_pose <- power_pose[,1:7]
# write_csv(power_pose, file="./data/power_pose.csv")
power_pose <- read.csv("./data/power_pose.csv")
# compute effect sizes
str(power_pose)
power_pose %>%
mutate(pooled_sd = sqrt(((n_high_power-1)*sd_high_power^2 + (n_low_power-1)*sd_low_power^2)/(n_high_power+n_low_power-2)),
mean_diff =  mean_high_power - mean_low_power,
cohen_d = mean_diff/pooled_sd) -> power_pose
# function for computing pooled SD
pooled_SD <- function(sdA,sdB,nA,nB){
sqrt((sdA^2*(nA-1) + sdB^2*(nB-1))/(nA+nB-1))
}
# function for Cohen's d
cohen_d_se <- function(n1,n2,d){
sqrt((n1+n2)/(n1*n2) + (d^2)/(2*(n1+n2)))
}
# apply functions & create new columns in the dataset (using dplyr::mutate)
power_pose <- power_pose %>%
mutate(pooled_sd =pooled_SD(sd_high_power, sd_low_power, n_high_power, n_low_power),
mean_diff =  mean_high_power - mean_low_power,
cohen_d = mean_diff/pooled_sd,
SE = cohen_d_se(n_high_power, n_low_power,cohen_d))
plot(pwr_bk$effectSize, power_pose$cohen_d)
plot(pwr_bk$SE, power_pose$cohen_d_se )
abline(a=0,b=1)
plot(power_pose$cohen_d, power_pose$SE)
par(mfrow=c(1,2))
plot(with(power_pose, n_high_power + n_low_power),power_pose$SE, xlab="n", ylab="SE(Cohen's d)")
plot(with(power_pose, n_high_power + n_low_power),power_pose$cohen_d, xlab="n", ylab="Cohen's d")
# calculate also the t-test
power_pose$t <- with(power_pose, cohen_d / sqrt(1/n_high_power + 1/n_low_power))
power_pose$p <- 1 - pt(power_pose$t, df=with(power_pose, n_high_power + n_low_power - 2))
plot(power_pose$t, pwr_bk$t_value); abline(a=0,b=1)
plot(power_pose$p, pwr_bk$one_sided_p_value); abline(a=0,b=1)
### library metafor
library(metafor)
res <- rma(cohen_d, SE^2, data = power_pose)
res
print(res)
summary(res)
forest(res)
forest(res, slab=study, xlim=c(-5,2), xlab="Cohen's d",
ilab=round(cbind(with(power_pose, n_high_power + n_low_power),
mean_low_power, sd_low_power, mean_high_power, sd_high_power),digits=2),
ilab.xpos=c(-3.5, -2.5,-2,-1.25,-0.75), cex=.75,
header="Authors", mlab="")
par(cex=.75, font=2)
text(c(-2.5,-2,-1.25,-0.75), res$k+2, c("mean", "Std.", "mean", "Std."))
text(c(-2.25,-1),     res$k+3, c("Low power", "High power"))
text(-3.5, res$k+2, "N")
text(-5, -1, pos=4, cex=0.9,
bquote(paste("RE Model (Q = ",
.(formatC(res$QE, digits=2, format="f")), ", df = ", .(res$k - res$p),
", p = ", .(formatC(res$QEp, digits=2, format="f")), "; ", I^2, " = ",
.(formatC(res$I2, digits=1, format="f")), "%)")))
forest(res, slab=study, xlim=c(-5,2), xlab="Cohen's d",
ilab=round(cbind(with(power_pose, n_high_power + n_low_power),
mean_low_power, sd_low_power, mean_high_power, sd_high_power),digits=2),
ilab.xpos=c(-3.5, -2.5,-2,-1.25,-0.75), cex=.75,
header="Authors", mlab="")
par(cex=.75, font=2)
text(c(-2.5,-2,-1.25,-0.75), res$k+2, c("mean", "Std.", "mean", "Std."))
text(c(-2.25,-1),     res$k+3, c("Low power", "High power"))
text(-3.5, res$k+2, "N")
text(-5, -1, pos=4, cex=0.9,
bquote(paste("RE Model (Q = ",
.(formatC(res$QE, digits=2, format="f")), ", df = ", .(res$k - res$p),
", p = ", .(formatC(res$QEp, digits=2, format="f")), "; ", I^2, " = ",
.(formatC(res$I2, digits=1, format="f")), "%)")))
res
?meta_fixed
data(facial_feedback)
str(facial_feedback)
data(towels)
head(towels)
library(dmetar)
install.packages("dmetar")
load('./data/thirdwave.rda')
str(thirdwave)
str(ThirdWave)
res2 <- rma(TE, seTE^2, data = ThirdWave)
res2
? rma
#
res2 <- rma(yi=TE, vi=seTE^2, data = ThirdWave, mods = RiskOfBias, scale = RiskOfBias)
#
res2 <- rma(yi=TE, vi=seTE^2, data = ThirdWave, mods = factor(RiskOfBias), scale = factor(RiskOfBias))
res2
summary(res2)
summary(rma(cohen_d, SE^2, data = power_pose, method="FE"))
# slides & formatting
options(htmltools.dir.version = FALSE)
options(crayon.enabled = TRUE)
xaringanExtra::use_xaringan_extra(c("tile_view", "animate_css", "tachyons"))
# css: [rladies-fonts, default, custom/style.css]
library(xaringanthemer)
style_solarized_light(colors = c(
red = "#f34213",
purple = "#3e2f5b",
orange = "#ff8811",
green = "#136f63",
white = "#FFFFFF",
blue = " #0000FF"
))
# R stuff
library(ggplot2)
nice_theme <- theme_xaringan()+theme(text=element_text(size=9),panel.border=element_blank(),strip.text=element_text(size=rel(0.8)),axis.text=element_text(size=8),panel.grid.minor=element_blank(),axis.line=element_line(size=.4), axis.title=element_text(size=11), legend.title=element_text(size=11))
theme_set(nice_theme)
background_plot <- nice_theme$plot.background$colour
knitr::opts_knit$set(global.par = TRUE) # fix par for multiple plots
library(tidyverse)
library(kableExtra)
# references & citations
library(RefManageR)
# BibOptions(check.entries = FALSE,
#            bib.style = "authoryear",
#            cite.style = "alphabetic",
#            style = "markdown",
#            hyperlink = FALSE,
#            dashed = FALSE)
BibOptions(check.entries = FALSE, bib.style = "authoryear", style = "text")
myBib <- ReadBib("./meta_analyses_references.bib", check = FALSE)
#
library(tidyverse)
library(lme4)
library(sjPlot)
res <- rma(cohen_d, SE^2, data = power_pose)
res <- rma(cohen_d, SE^2, data = power_pose)
summary(res)
summary(rma(cohen_d, SE^2, data = power_pose, method="FE"))
tab_model(res)
load('./data/thirdwave.rda')
str(ThirdWave)
#
res2 <- rma(yi=TE, vi=seTE^2, data = ThirdWave, mods = factor(RiskOfBias), scale = factor(RiskOfBias))
summary(res2)
res2
print(res2)
forest(res2)
#
res2 <- rma(yi=TE, vi=seTE^2, data = ThirdWave, mods = factor(RiskOfBias))
summary(res2)
forest(res2)
# example 1 meta-analysis
library(metaBMA)
data(towell)
data(towel)
data(towels)
str(towels)
write_csv(towels, file="./data/towels.csv")
towels <- read.csv("./data/towels.csv")
load('./data/thirdwave.rda')
str(ThirdWave)
unique(ThirdWave$TypeControlGroup)
unique(ThirdWave$InterventionDuration)
unique(ThirdWave$InterventionType)
head(ThirdWave)
library(DT)
?datatable
res2 <- rma(yi=TE, vi=seTE^2, data = ThirdWave, mods = factor(RiskOfBias))
print(res2)
ThirdWave$duration_dummy <- ifelse(ThirdWave$InterventionDuration=="long", 1, 0)
res2 <- rma(yi=TE, vi=seTE^2, data = ThirdWave, mods = duration_dummy)
print(res2)
res3 <- rma(yi=TE, vi=seTE^2, data = ThirdWave,
mods = duration_dummy,
scale=duration_dummy)
print(res3)
res0 <- rma(yi=TE, vi=seTE^2, data = ThirdWave)
anova(res0, res2)
res0 <- rma(yi=TE, vi=seTE^2, data = ThirdWave, method="ML")
# refit models using maximum likelihood estimation (ML)
res0 <- rma(yi=TE, vi=seTE^2, data = ThirdWave, method="ML")
res2 <- rma(yi=TE, vi=seTE^2, data = ThirdWave, mods = duration_dummy, method="ML")
res3 <- rma(yi=TE, vi=seTE^2, data = ThirdWave, mods = duration_dummy, scale = duration_dummy, method="ML")
# run likelihood ratio test of nested models
anova(res0, res2, res3)
anova(res0, res3)
anova(res2, res3)
?anova.rma
0.0715/0.0423
0.0423/0.0715
sqrt(0.0423)/sqrt(0.0715)
sqrt(0.0423/0.0715)
anova(res0, res2)
anova(res2, res0)
load('./data/Chernobyl.rda')
str(Chernobyl)
load('./data/Chernobyl.rda')
str(Chernobyl)
full.model <- rma.mv(yi = z,
V = var.z,
slab = author,
data = Chernobyl,
random = ~ 1 | author/es.id,
method = "REML")
print(full.model)
full.model <- rma.mv(yi = z,
V = var.z,
slab = author,
data = Chernobyl,
# random = ~ 1 | author/es.id,
random = ~ 1 | author, ~ 1 | author:es.id,
method = "REML")
full.model <- rma.mv(yi = z,
V = var.z,
slab = author,
data = Chernobyl,
# random = ~ 1 | author/es.id,
random = ~ 1 | author, ~ 1 | author::es.id,
method = "REML")
full.model <- rma.mv(yi = z,
V = var.z,
slab = author,
data = Chernobyl,
# random = ~ 1 | author/es.id,
random = ~ 1 | author + ~ 1 | author:es.id,
method = "REML")
full.model <- rma.mv(yi = z,
V = var.z,
slab = author,
data = Chernobyl,
# random = ~ 1 | author/es.id,
random = ~ 1 | author, ~ 1 | interaction(author,es.id),
method = "REML")
full.model <- rma.mv(yi = z,
V = var.z,
slab = author,
data = Chernobyl,
# random = ~ 1 | author/es.id,
random = ~ 1 | author+ ~ 1 | interaction(author,es.id),
method = "REML")
full.model <- rma.mv(yi = z,
V = var.z,
slab = author,
data = Chernobyl,
# random = ~ 1 | author/es.id,
random = list(~ 1 | author, ~ 1 | interaction(author,es.id)),
method = "REML")
print(full.model)
full.model <- rma.mv(yi = z,
V = var.z,
slab = author,
data = Chernobyl,
random = ~ 1 | author/es.id,
# random = list(~ 1 | author, ~ 1 | interaction(author,es.id)),
method = "REML")
print(full.model)
summary(full.model)
full.model <- rma.mv(yi = z,
V = var.z,
slab = author,
data = Chernobyl,
random = ~ 1 | author/es.id,
# random = list(~ 1 | author, ~ 1 | interaction(author,es.id)),
method = "REML")
summary(full.model)
full.model <- rma.mv(yi = z,
V = var.z,
slab = author,
data = Chernobyl,
# random = ~ 1 | author/es.id,
random = list(~ 1 | author, ~ 1 | interaction(author,es.id)),
method = "REML")
summary(full.model)
full.model <- rma.mv(yi = z,
V = var.z,
slab = author,
data = Chernobyl,
# random = ~ 1 | author/es.id,
random = list(~ 1 | author, ~ 1 | es.id),
method = "REML")
summary(full.model)
forest(full.model)
dat.konstantopoulos2011
data(dat.konstantopoulos2011)
data(konstantopoulos2011)
data(dat.konstantopoulos2011)
str(konstantopoulos2011)
str(dat.konstantopoulos2011)
res <- rma(yi=TE, vi=seTE^2, data = ThirdWave)
funnel(res)
funnel(res, level=c(90, 95, 99), shade=c("white", "gray55", "gray75"), refline=0, legend=TRUE)
funnel(res, level=c(90, 95, 99), shade=c("white", "gray55", "gray75"), refline=0, legend=TRUE, xlab="Standardized mean difference")
res2 <- rma(yi=TE, vi=seTE^2, data = ThirdWave, mods = duration_dummy, method="ML")
funnel(res2, level=c(90, 95, 99), shade=c("white", "gray55", "gray75"), refline=0, legend=TRUE, xlab="Standardized mean difference")
res2
res
?funnel
funnel(res, level=c(90, 95, 99), shade=c("white", "gray55", "gray75"), refline=0, legend=TRUE, xlab="Standardized mean difference")
funnel(res, level=c(90, 95, 99), shade=c("white", "gray55", "gray75"), refline=0, legend=TRUE, xlab="Standardized mean difference",refline2=0)
rm(list=ls())
setwd("/mnt/D/Dropbox/sync/blog/webdown")
blogdown::build_site()
power_pose <- read.csv("https://mlisi.xyz/files/workshops/workshops/meta_analyses//data/power_pose.csv")
power_pose <- read.csv("https://mlisi.xyz/files/workshops/workshops/meta_analyses/data/power_pose.csv")
power_pose <- read.csv("https://mlisi.xyz/files/workshops/meta_analyses/data/power_pose.csv")
load('https://mlisi.xyz/files/workshops/data/thirdwave.rda')
load('https://mlisi.xyz/files/workshops/data/thirdwave.rda')
towels <- read.csv("https://mlisi.xyz/files/workshops/data/towels.csv")
towels <- read.csv("https://mlisi.xyz/files/workshops/meta_analyses/data/towels.csv")
str(towels)
load('https://mlisi.xyz/files/workshops/meta_analyses/data/thirdwave.rda')
load('https://mlisi.xyz/files/workshops/meta_analyses/data/thirdwave.rda')
load('./data/Chernobyl.rda')
rm(list=ls())
hablar::set_wd_to_script_path()
# meta analysis workshop prep
library(tidyverse)
library(lme4)
library(sjPlot)
# effect size from LMM
load("./not_shared/exam_data.RData")
str(d1)
m0 <- d1 %>%
filter(year_of_study=="2") %>%
lmer(mark ~ gender + (1|student) + (1|module), data=.)
model_summary <- print(summary(m0))
d1 %>%
filter(year_of_study=="2") %>%
group_by(gender) %>%
summarise(N=n())
model_summary
fixef(m0)
summary(m0)$fixe
# example 1 meta-analysis
library(metaBMA)
data(power_pose)
str(power_pose)
pwr_bk <- power_pose
power_pose <- power_pose[,1:7]
# write_csv(power_pose, file="./data/power_pose.csv")
power_pose <- read.csv("./data/power_pose.csv")
# compute effect sizes
str(power_pose)
power_pose %>%
mutate(pooled_sd = sqrt(((n_high_power-1)*sd_high_power^2 + (n_low_power-1)*sd_low_power^2)/(n_high_power+n_low_power-2)),
mean_diff =  mean_high_power - mean_low_power,
cohen_d = mean_diff/pooled_sd) -> power_pose
# function for computing pooled SD
pooled_SD <- function(sdA,sdB,nA,nB){
sqrt((sdA^2*(nA-1) + sdB^2*(nB-1))/(nA+nB-1))
}
# function for Cohen's d
cohen_d_se <- function(n1,n2,d){
sqrt((n1+n2)/(n1*n2) + (d^2)/(2*(n1+n2)))
}
# apply functions & create new columns in the dataset (using dplyr::mutate)
power_pose <- power_pose %>%
mutate(pooled_sd =pooled_SD(sd_high_power, sd_low_power, n_high_power, n_low_power),
mean_diff =  mean_high_power - mean_low_power,
cohen_d = mean_diff/pooled_sd,
SE = cohen_d_se(n_high_power, n_low_power,cohen_d))
plot(pwr_bk$effectSize, power_pose$cohen_d)
plot(pwr_bk$SE, power_pose$cohen_d_se )
abline(a=0,b=1)
plot(power_pose$cohen_d, power_pose$SE)
par(mfrow=c(1,2))
plot(with(power_pose, n_high_power + n_low_power),power_pose$SE, xlab="n", ylab="SE(Cohen's d)")
plot(with(power_pose, n_high_power + n_low_power),power_pose$cohen_d, xlab="n", ylab="Cohen's d")
# calculate also the t-test
power_pose$t <- with(power_pose, cohen_d / sqrt(1/n_high_power + 1/n_low_power))
power_pose$p <- 1 - pt(power_pose$t, df=with(power_pose, n_high_power + n_low_power - 2))
plot(power_pose$t, pwr_bk$t_value); abline(a=0,b=1)
plot(power_pose$p, pwr_bk$one_sided_p_value); abline(a=0,b=1)
### library metafor
library(metafor)
res <- rma(cohen_d, SE^2, data = power_pose)
res
forest(res, slab=study, xlim=c(-5,2), xlab="Cohen's d",
ilab=round(cbind(with(power_pose, n_high_power + n_low_power),
mean_low_power, sd_low_power, mean_high_power, sd_high_power),digits=2),
ilab.xpos=c(-3.5, -2.5,-2,-1.25,-0.75), cex=.75,
header="Authors", mlab="")
par(cex=.75, font=2)
text(c(-2.5,-2,-1.25,-0.75), res$k+2, c("mean", "Std.", "mean", "Std."))
text(c(-2.25,-1),     res$k+3, c("Low power", "High power"))
text(-3.5, res$k+2, "N")
text(-5, -1, pos=4, cex=0.75,
bquote(paste("RE Model (Q = ",
.(formatC(res$QE, digits=2, format="f")), ", df = ", .(res$k - res$p),
", p = ", .(formatC(res$QEp, digits=2, format="f")), "; ", I^2, " = ",
.(formatC(res$I2, digits=1, format="f")), "%)")))
### Exercise RE
# example 1 meta-analysis
library(metaBMA)
data(towels)
str(towels)
write_csv(towels, file="./data/towels.csv")
towels <- read.csv("./data/towels.csv")
load('./data/thirdwave.rda')
str(ThirdWave)
#
res2 <- rma(yi=TE, vi=seTE^2, data = ThirdWave, mods = factor(RiskOfBias))
summary(res2)
forest(res2)
### multilevel
load('./data/Chernobyl.rda')
str(Chernobyl)
write_csv(Chernobyl, file="./data/Chernobyl.csv")
write_csv(ThirdWave, file="./data/thirdwave.csv")
?load
load('https://mlisi.xyz/files/workshops/meta_analyses/data/thirdwave.rda')
towels <- read.csv("https://mlisi.xyz/files/workshops/meta_analyses/data/towels.csv")
str(towels)
load('https://mlisi.xyz/files/workshops/meta_analyses/data/thirdwave.rda')
download.file('https://mlisi.xyz/files/workshops/meta_analyses/data/thirdwave.rda')
load(url('https://mlisi.xyz/files/workshops/meta_analyses/data/thirdwave.rda'))
str(ThirdWave)
rm(ThirdWave)
load(url('https://mlisi.xyz/files/workshops/meta_analyses/data/thirdwave.rda'))
load(url('https://mlisi.xyz/files/workshops/meta_analyses/data/Chernobyl.rda'))
rm(list=ls())
#setwd("~/sync/blog/webdown")
setwd("/mnt/D/Dropbox/sync/blog/webdown")
blogdown::build_site()
#blogdown::serve_site()
rm(list=ls())
#setwd("~/sync/blog/webdown")
setwd("/mnt/D/Dropbox/sync/blog/webdown")
blogdown::build_site()
#blogdown::serve_site()
rm(list=ls())
#setwd("~/sync/blog/webdown")
setwd("/mnt/D/Dropbox/sync/blog/webdown")
blogdown::build_site()
#blogdown::serve_site()
rm(list=ls())
#setwd("~/sync/blog/webdown")
setwd("/mnt/D/Dropbox/sync/blog/webdown")
blogdown::build_site()
#blogdown::serve_site()
rm(list=ls())
#setwd("~/sync/blog/webdown")
setwd("/mnt/D/Dropbox/sync/blog/webdown")
blogdown::build_site()
#blogdown::serve_site()
rm(list=ls())
#setwd("~/sync/blog/webdown")
setwd("/mnt/D/Dropbox/sync/blog/webdown")
blogdown::build_site()
#blogdown::serve_site()
rm(list=ls())
#setwd("~/sync/blog/webdown")
setwd("/mnt/D/Dropbox/sync/blog/webdown")
blogdown::build_site()
#blogdown::serve_site()
#!/usr/bin/env Rscript
rm(list=ls())
setwd("/mnt/sda2/matteoHDD/git_local_HDD/RHUL-stats/RHUL-stats-notebook")
# bookdown::serve_book(dir="/mnt/sda2/matteoHDD/git_local_HDD/RHUL-stats/RHUL-stats-notebook",
#                      output_dir = "../docs")
# servr::daemon_stop(1)
bookdown::render_book("index.Rmd", "bookdown::bs4_book",
output_dir = "../docs",
new_session = TRUE)
# bookdown::render_book("index.Rmd", "bookdown::pdf_book",
#                       output_dir = "../",
#                       new_session = TRUE)
options(bookdown.clean_book = TRUE)
bookdown::clean_book()
setwd("/mnt/sda2/matteoHDD/git_local_HDD/RHUL-stats/")
system("rm *.md")
system("rm *.tex")
system("git add -A")
system('git commit -m "meta-analysis workshop added"')
system("git push origin main")
#!/usr/bin/env Rscript
rm(list=ls())
setwd("/mnt/sda2/matteoHDD/git_local_HDD/RHUL-stats/RHUL-stats-notebook")
# bookdown::serve_book(dir="/mnt/sda2/matteoHDD/git_local_HDD/RHUL-stats/RHUL-stats-notebook",
#                      output_dir = "../docs")
# servr::daemon_stop(1)
bookdown::render_book("index.Rmd", "bookdown::bs4_book",
output_dir = "../docs",
new_session = TRUE)
# bookdown::render_book("index.Rmd", "bookdown::pdf_book",
#                       output_dir = "../",
#                       new_session = TRUE)
options(bookdown.clean_book = TRUE)
bookdown::clean_book()
setwd("/mnt/sda2/matteoHDD/git_local_HDD/RHUL-stats/")
system("rm *.md")
system("rm *.tex")
system("git add -A")
system('git commit -m "meta-analysis workshop added"')
system("git push origin main")
