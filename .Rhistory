# Define a DAG with repeated measures
dag_feedback <- dagify(
# Intelligence at time 1 influences education at time 1
ED1 ~ IQ1,
# Education at time 1 influences intelligence at time 2
IQ2 ~ ED1,
# Intelligence at time 2 influences education at time 2
ED2 ~ IQ2,
# Optionally, add arrows if the earlier measure also influences later measures
IQ2 ~ IQ1,
ED2 ~ ED1,
coords = list(
x = c(IQ1 = 0, ED1 = 1.5, IQ2 = 3, ED2 = 4.5),
y = c(IQ1 = 0, ED1 = 0, IQ2 = 0, ED2 = 0)
)
)
# Plot
ggdag(dag_feedback, node = FALSE, text_col = "black", text_size = 8) +
theme_dag()
library(tidyverse)
library(ggdag)
library(dagitty)
#| fig-cap: "Civil engineering doctorates awarded (in the US; source NSF)	as a function of the per capita consumption of mozzarella cheese, measured from 2000 to 2009."
#| fig-align: 'center'
#| fig-cap-location: margin
#| fig-width: 5
#| fig-height: 5
par(mar=c(5,4,1.5,1)+0.1)
year <- c(2000,	2001,	2002,	2003,	2004,	2005,	2006,	2007,	2008,	2009)
mozza <- c(9.3,	9.7,	9.7,	9.7,	9.9,	10.2,	10.5,	11,	10.6,	10.6)
engPhd <- c(480,	501,	540,	552,	547,	622,	655,	701,	712,	708)
d <- data.frame(year, mozza, engPhd)
d$mozza_kg <- d$mozza * 0.453592
m0 <- lm(engPhd~mozza_kg,d)
## summary(m0)
beta <- round(unname(coef(m0)),digits=2)
corr_cheese <- cor.test(d$engPhd,d$mozza_kg)
newx = seq(3,6,by = 0.1)
conf_interval <- predict(m0, newdata=data.frame(mozza_kg=newx), interval="confidence",level = 0.975)
par(pty="s")
plot(d$mozza_kg, d$engPhd,cex=1.5,pch=21,lwd=2,col="blue", xlab="Per-capita consumption of mozzarella cheese [Kg/year]",ylab="Civil engineering PhD awarded [N/year]",xlim=c(8.9,11.2)* 0.453592,ylim=c(440,760))
abline(m0,lwd=3)
lines(newx, conf_interval[,2], lty=2)
lines(newx, conf_interval[,3], lty=2)
text(4.7,450,bquote(italic(r)~"="~.(round(corr_cheese$estimate,digits=2))~"  "~italic(p)~"<.0001"))
#| fig-height: 4
#| fig-width: 6
#| fig-align: center
#| echo: FALSE
coord_dag <- list(x = c(phds = 1, mozza = -1, third = 0)*1.5,
y = c(phds = -1, mozza = -1, third = 1))
dag <- dagify(mozza ~ third,
phds ~ third,
labels = c(
mozza = "mozzarella\nconsumption",
third = "third\nvariable(s)",
phds = "PhDs awarded"),
coords = coord_dag)
# adjustmentSets( dag , exposure="mozza" , outcome="phds" )
dag %>%
tidy_dagitty(layout = "nicely") %>%
ggplot(aes(x = x, y = y, xend = xend, yend = yend))+
geom_dag_point(colour = 'white', size = 40) +
geom_dag_text(aes(label=label), colour = 'black',family="Corbel") +
geom_dag_edges(start_cap = ggraph::circle(12, 'mm'),
end_cap = ggraph::circle(12, 'mm')) +
theme_dag() +
coord_equal(xlim=c(-2,2),
ylim=c(-1,1))
#| fig-height: 5
#| fig-width: 2.5
#| fig-align: center
#| echo: FALSE
dag <- dagify(
Z ~ W + Y,
Y ~ X + W,
W ~X,
coords = list(
x = c( X = 0, Y = 0, W=1, Z=0),
y = c( X = 1, Y = 0, W=0, Z=-1)
)
)
# adjustmentSets( dag , exposure="W" , outcome="Z" )
ggdag(dag, node=FALSE, text_col = "black", text_size = 8) +
#geom_dag_point(colour = 'white', size = 40) +
# geom_dag_text(colour = 'black',family="Corbel") +
# geom_dag_edges(start_cap = ggraph::circle(4, 'mm'),
#                end_cap = ggraph::circle(4, 'mm')) +
theme_dag()
#| fig-height: 4
#| fig-width: 5
#| fig-align: center
#| echo: false
coord_dag <- list(x = c(X1 = 1, X2 = -1, X3 = 0, Y1=, Y2=, Y3=),
y = c(phds = -1, mozza = -1, third = 1))
#| fig-height: 4
#| fig-width: 5
#| fig-align: center
#| echo: false
# Define the DAG
dag <- dagify(
X2 ~ X1 + Y1,
Y2 ~ X1 + Y1,
X3 ~ X2 + Y2,
Y3 ~ X2 + Y2,
coords = list(
x = c(X1 = -1, X2 = 0, X3=1, Y1=-1, Y2=1, Y3=1),
y = c(X1 = -0.5, X2 = -0.5, X3=-0.5, Y1=0.5, Y2=0.5, Y3=0.5)
)
)
# Create the plot with subscripts
dag %>%
tidy_dagitty() %>%
arrange(name) %>%
ggplot(aes(x = x, y = y, xend = xend, yend = yend)) +
geom_dag_edges() +
geom_dag_text(
parse = TRUE,
col = "black",
size=8,
label = c(expression(X[1]), expression(X[2]), expression(X[3]),
expression(Y[1]), expression(Y[2]), expression(Y[3]))
) +
theme_dag()
# Define the DAG
dag <- dagify(
X2 ~ X1 + Y1,
Y2 ~ X1 + Y1,
X3 ~ X2 + Y2,
Y3 ~ X2 + Y2,
coords = list(
x = c(X1 = -1, X2 = 0, X3=1, Y1=-1, Y2=1, Y3=1),
y = c(X1 = -0.5, X2 = -0.5, X3=-0.5, Y1=0.5, Y2=0.5, Y3=0.5)
)
)
# Create the plot with subscripts
dag %>%
tidy_dagitty() %>%
arrange(name) %>%
ggplot(aes(x = x, y = y, xend = xend, yend = yend)) +
geom_dag_edges() +
geom_dag_text(
parse = TRUE,
col = "black",
size=8,
label = c(expression(X[1]), expression(X[2]), expression(X[3]),
expression(Y[1]), expression(Y[2]), expression(Y[3]))
) +
theme_dag()
rm(list=ls())
hablar::set_wd_to_script_path()
library(tidyverse)
library(ggdag)
library(dagitty)
dag <- dagify(
Z ~ W + Y,
Y ~ X + W,
W ~X,
coords = list(
x = c( X = 0, Y = 0, W=1, Z=0),
y = c( X = 1, Y = 0, W=0, Z=-1)
)
)
adjustmentSets( dag , exposure="W" , outcome="Z" )
##################################################
coord_dag <- list(x = c(A = -1, B = 1, C = 0)*1.5,
y = c(A = 1, B = 1, C = -1))
dag <- dagify(C ~ A,
C ~ B,
coords = coord_dag)
ggdag(dag, node=FALSE, text_col = "black", text_size = 8) +
theme_dag()
A <- sample(1:6, 1000, replace = TRUE)
B <- sample(1:6, 1000, replace = TRUE)
C <- A + B
plot(jitter(A), jitter(B))
plot(jitter(A), jitter(residuals(lm(B ~ C))))
summary(lm(B ~ C + A))
dag <- dagify(C ~ A,
C ~ B)
impliedConditionalIndependencies( dag)
###################################################
dag <- dagify(
X2 ~ X1 + Y1,
Y2 ~ X1 + Y1,
X3 ~ X2 + Y2,
Y3 ~ X2 + Y2,
coords = list(
x = c(X1 = -1, X2 = 0, X3=1, Y1=-1, Y2=1, Y3=1),
y = c(X1 = -0.5, X2 = -0.5, X3=-0.5, Y1=0.5, Y2=0.5, Y3=0.5)
)
)
# Create the plot with subscripts
dag %>%
tidy_dagitty() %>%
arrange(name) %>%
ggplot(aes(x = x, y = y, xend = xend, yend = yend)) +
geom_dag_edges() +
geom_dag_text(
parse = TRUE,
col = "black",
size=8,
label = c(expression(X[1]), expression(X[2]), expression(X[3]),
expression(Y[1]), expression(Y[2]), expression(Y[3]))
) +
theme_dag()
dag <- dagify(
X2 ~ X1 + Y1,
Y2 ~ X1 + Y1,
X3 ~ X2 + Y2,
Y3 ~ X2 + Y2,
coords = list(
x = c(X1 = -1, X2 = 0, X3=1, Y1=-1, Y2=1, Y3=1),
y = c(X1 = -0.5, X2 = -0.5, X3=-0.5, Y1=0.5, Y2=0.5, Y3=0.5)
)
)
dag <- dagify(
X2 ~ X1 + Y1,
Y2 ~ X1 + Y1,
X3 ~ X2 + Y2,
Y3 ~ X2 + Y2
)
# Create the plot with subscripts
dag %>%
tidy_dagitty() %>%
arrange(name) %>%
ggplot(aes(x = x, y = y, xend = xend, yend = yend)) +
geom_dag_edges() +
geom_dag_text(
parse = TRUE,
col = "black",
size=8,
label = c(expression(X[1]), expression(X[2]), expression(X[3]),
expression(Y[1]), expression(Y[2]), expression(Y[3]))
) +
theme_dag()
dag <- dagify(
X2 ~ X1 + Y1,
Y2 ~ X1 + Y1,
X3 ~ X2 + Y2,
Y3 ~ X2 + Y2
)
dag %>%
tidy_dagitty()
dag %>%
tidy_dagitty() %>%
mutate(x = c(-1,-1,0,0,1,-1,-1,0,0,1),
y = c(rep(-0.5, 5),rep(0.5, 5)))
dag <- dagify(
X2 ~ X1 + Y1,
Y2 ~ X1 + Y1,
X3 ~ X2 + Y2,
Y3 ~ X2 + Y2
)
# Create the plot with subscripts
dag <- dag %>%
tidy_dagitty() %>%
mutate(x = c(-1,-1,0,0,1,-1,-1,0,0,1),
y = c(rep(-0.5, 5),rep(0.5, 5)))
dag %>%
arrange(name) %>%
ggplot(aes(x = x, y = y, xend = xend, yend = yend)) +
geom_dag_edges() +
geom_dag_text(
parse = TRUE,
col = "black",
size=8,
label = c(expression(X[1]), expression(X[2]), expression(X[3]),
expression(Y[1]), expression(Y[2]), expression(Y[3]))
) +
theme_dag()
?tidy_dagitty
dag <- dagify(
X2 ~ X1 + Y1,
Y2 ~ X1 + Y1,
X3 ~ X2 + Y2,
Y3 ~ X2 + Y2,
coords = list(
x = c(X1 = -1, X2 = 0, X3=1, Y1=-1, Y2=1, Y3=1),
y = c(X1 = -0.5, X2 = -0.5, X3=-0.5, Y1=0.5, Y2=0.5, Y3=0.5)
)
)
str(dag)
dag %>%
tidy_dagitty()
dag <- dagify(
X2 ~ X1 + Y1,
Y2 ~ X1 + Y1,
X3 ~ X2 + Y2,
Y3 ~ X2 + Y2,
coords = list(
x = c(X1 = -1, X2 = 0, X3=1, Y1=-1, Y2=1, Y3=1),
y = c(X1 = -0.5, X2 = -0.5, X3=-0.5, Y1=0.5, Y2=0.5, Y3=0.5)
)
)
# ,
# coords = list(
#   x = c(X1 = -1, X2 = 0, X3=1, Y1=-1, Y2=1, Y3=1),
#   y = c(X1 = -0.5, X2 = -0.5, X3=-0.5, Y1=0.5, Y2=0.5, Y3=0.5)
# )
# Create the plot with subscripts
dag <- dag %>%
tidy_dagitty()
dag %>%
arrange(name) %>%
ggplot(aes(x = x, y = y, xend = xend, yend = yend)) +
geom_dag_edges() +
geom_dag_text(
parse = TRUE,
col = "black",
size=8,
label = c(expression(X[1]), expression(X[2]), expression(X[3]),
expression(Y[1]), expression(Y[2]), expression(Y[3]))
) +
theme_dag()
dag %>%
#arrange(name) %>%
ggplot(aes(x = x, y = y, xend = xend, yend = yend)) +
geom_dag_edges() +
geom_dag_text(
parse = TRUE,
col = "black",
size=8,
label = c(expression(X[1]), expression(X[2]), expression(X[3]),
expression(Y[1]), expression(Y[2]), expression(Y[3]))
) +
theme_dag()
dag %>%
arrange(name) %>%
ggplot(aes(x = x, y = y, xend = xend, yend = yend)) +
geom_dag_edges() +
geom_dag_text(
parse = TRUE,
col = "black",
size=8
) +
theme_dag()
dag <- dagify(
X2 ~ X1 + Y1,
Y2 ~ X1 + Y1,
X3 ~ X2 + Y2,
Y3 ~ X2 + Y2,
coords = list(
x = c(X1 = -1, X2 = 0, X3=1, Y1=-1, Y2=0, Y3=1),
y = c(X1 = -0.5, X2 = -0.5, X3=-0.5, Y1=0.5, Y2=0.5, Y3=0.5)
)
)
# ,
# coords = list(
#   x = c(X1 = -1, X2 = 0, X3=1, Y1=-1, Y2=1, Y3=1),
#   y = c(X1 = -0.5, X2 = -0.5, X3=-0.5, Y1=0.5, Y2=0.5, Y3=0.5)
# )
# Create the plot with subscripts
dag <- dag %>%
tidy_dagitty()
dag %>%
arrange(name) %>%
ggplot(aes(x = x, y = y, xend = xend, yend = yend)) +
geom_dag_edges() +
geom_dag_text(
parse = TRUE,
col = "black",
size=8,
label = c(expression(X[1]), expression(X[2]), expression(X[3]),
expression(Y[1]), expression(Y[2]), expression(Y[3]))
) +
theme_dag()
#| fig-height: 4
#| fig-width: 5
#| fig-align: center
#| echo: false
dag <- dagify(
X2 ~ X1 + Y1,
Y2 ~ X1 + Y1,
X3 ~ X2 + Y2,
Y3 ~ X2 + Y2,
coords = list(
x = c(X1 = -1, X2 = 0, X3=1, Y1=-1, Y2=0, Y3=1),
y = c(X1 = -0.5, X2 = -0.5, X3=-0.5, Y1=0.5, Y2=0.5, Y3=0.5)
)
)
# Create the plot with subscripts
dag <- dag %>%
tidy_dagitty()
dag %>%
arrange(name) %>%
ggplot(aes(x = x, y = y, xend = xend, yend = yend)) +
geom_dag_edges() +
geom_dag_text(
parse = TRUE,
col = "black",
size=8,
label = c(expression(X[1]), expression(X[2]), expression(X[3]),
expression(Y[1]), expression(Y[2]), expression(Y[3]))
) +
theme_dag()
#| fig-height: 4
#| fig-width: 5
#| fig-align: center
#| echo: false
dag <- dagify(
X2 ~ X1 + Y1,
Y2 ~ X1 + Y1,
X3 ~ X2 + Y2,
Y3 ~ X2 + Y2,
coords = list(
x = c(X1 = -1, X2 = 0, X3=1, Y1=-1, Y2=0, Y3=1),
y = c(X1 = -0.5, X2 = -0.5, X3=-0.5, Y1=0.5, Y2=0.5, Y3=0.5)
)
)
dag <- dag %>%
tidy_dagitty()
dag %>%
arrange(name) %>%
ggplot(aes(x = x, y = y, xend = xend, yend = yend)) +
geom_dag_edges() +
geom_dag_text(
parse = TRUE,
col = "black",
size=8,
label = c(expression(X[1]), expression(X[2]), expression(X[3]),
expression(Y[1]), expression(Y[2]), expression(Y[3]))
) +
theme_dag()
#| fig-height: 2
#| fig-width: 3  # Half the slider width when default slide width is 4
#| fig-align: center
#| echo: FALSE
#|
coord_dag <- list(x = c(X = -1, Y = 1, Z = 0)*1.5,
y = c(X = -1, Y = -1, Z = 1))
dag <- dagify(X ~ Z,
Y ~ Z,
Y ~ X,
coords = coord_dag)
ggdag(dag, node=FALSE, text_col = "black", text_size = 8) +
theme_dag()
#!/usr/bin/env Rscript
rm(list=ls())
setwd("/mnt/sda2/matteoHDD/git_local_HDD/RHUL-stats/RHUL-stats-notebook")
# setwd("~/git_local/RHUL-stats/RHUL-stats-notebook")
# bookdown::serve_book(dir="/mnt/sda2/matteoHDD/git_local_HDD/RHUL-stats/RHUL-stats-notebook",
#                      output_dir = "../docs")
# # servr::daemon_stop(1)
bookdown::render_book("index.Rmd", "bookdown::bs4_book",
output_dir = "../docs",
new_session = TRUE)
bookdown::render_book("index.Rmd", "bookdown::pdf_book",
output_dir = "../",
new_session = TRUE)
options(bookdown.clean_book = TRUE)
bookdown::clean_book()
setwd("/mnt/sda2/matteoHDD/git_local_HDD/RHUL-stats/")
# setwd("~/git_local/RHUL-stats/")
system("rm *.md")
system("rm *.tex")
system("git add -A")
system('git commit -m "added intro Bayes slides"')
system("git push origin main")
#!/usr/bin/env Rscript
rm(list=ls())
# setwd("/mnt/sda2/matteoHDD/git_local_HDD/RHUL-stats/RHUL-stats-notebook")
setwd("~/git_local/RHUL-stats/RHUL-stats-notebook")
#!/usr/bin/env Rscript
rm(list=ls())
setwd("/mnt/sda2/matteoHDD/git_local_HDD/RHUL-stats/RHUL-stats-notebook")
# setwd("~/git_local/RHUL-stats/RHUL-stats-notebook")
# bookdown::serve_book(dir="/mnt/sda2/matteoHDD/git_local_HDD/RHUL-stats/RHUL-stats-notebook",
#                      output_dir = "../docs")
# # servr::daemon_stop(1)
bookdown::render_book("index.Rmd", "bookdown::bs4_book",
output_dir = "../docs",
new_session = TRUE)
#!/usr/bin/env Rscript
rm(list=ls())
setwd("/mnt/sda2/matteoHDD/git_local_HDD/RHUL-stats/RHUL-stats-notebook")
# setwd("~/git_local/RHUL-stats/RHUL-stats-notebook")
# bookdown::serve_book(dir="/mnt/sda2/matteoHDD/git_local_HDD/RHUL-stats/RHUL-stats-notebook",
#                      output_dir = "../docs")
# # servr::daemon_stop(1)
bookdown::render_book("index.Rmd", "bookdown::bs4_book",
output_dir = "../docs",
new_session = TRUE)
bookdown::render_book("index.Rmd", "bookdown::pdf_book",
output_dir = "../",
new_session = TRUE)
options(bookdown.clean_book = TRUE)
bookdown::clean_book()
# setwd("/mnt/sda2/matteoHDD/git_local_HDD/RHUL-stats/")
setwd("~/git_local/RHUL-stats/")
#!/usr/bin/env Rscript
rm(list=ls())
setwd("/mnt/sda2/matteoHDD/git_local_HDD/RHUL-stats/RHUL-stats-notebook")
# setwd("~/git_local/RHUL-stats/RHUL-stats-notebook")
# bookdown::serve_book(dir="/mnt/sda2/matteoHDD/git_local_HDD/RHUL-stats/RHUL-stats-notebook",
#                      output_dir = "../docs")
# # servr::daemon_stop(1)
bookdown::render_book("index.Rmd", "bookdown::bs4_book",
output_dir = "../docs",
new_session = TRUE)
bookdown::render_book("index.Rmd", "bookdown::pdf_book",
output_dir = "../",
new_session = TRUE)
options(bookdown.clean_book = TRUE)
bookdown::clean_book()
setwd("/mnt/sda2/matteoHDD/git_local_HDD/RHUL-stats/")
# setwd("~/git_local/RHUL-stats/")
system("rm *.md")
system("rm *.tex")
system("git add -A")
system('git commit -m "added causal woorkshop"')
system("git push origin main")
