y <- rpois(n, exp(linpred))
plot(x,y,col="blue")
x_ <- seq(-2,2,0.1)
lines(x_, exp(a+b*x_))
segments(x,exp(a+b*x),x,y, lwd=1,lty=1, col="blue")
rm(list=ls())
set.seed(4)
n <- 100
x <- runif(n, -1.5, 1.5)
a <- 1
b <- 2
linpred <- a + b*x
y <- rpois(n, exp(linpred))
plot(x,y,col="blue")
x_ <- seq(-2,2,0.1)
lines(x_, exp(a+b*x_))
segments(x,exp(a+b*x),x,y, lwd=1,lty=3, col="blue")
set.seed(4)
n <- 100
x <- runif(n, -1.2, 1.2)
a <- 1
b <- 2
linpred <- a + b*x
y <- rpois(n, exp(linpred))
plot(x,y,col="blue")
x_ <- seq(-2,2,0.1)
lines(x_, exp(a+b*x_))
segments(x,exp(a+b*x),x,y, lwd=1,lty=3, col="blue")
set.seed(2)
n <- 100
x <- runif(n, -1.2, 1.2)
a <- 1
b <- 2
linpred <- a + b*x
y <- rpois(n, exp(linpred))
plot(x,y,col="blue")
x_ <- seq(-2,2,0.1)
lines(x_, exp(a+b*x_))
segments(x,exp(a+b*x),x,y, lwd=1,lty=3, col="blue")
set.seed(2)
n <- 100
x <- runif(n, -1.3, 1.3)
a <- 1
b <- 2
linpred <- a + b*x
y <- rpois(n, exp(linpred))
plot(x,y,col="blue")
x_ <- seq(-2,2,0.1)
lines(x_, exp(a+b*x_))
segments(x,exp(a+b*x),x,y, lwd=1,lty=3, col="blue")
set.seed(2)
n <- 100
x <- runif(n, -1.3, 1.3)
a <- 1
b <- 2
linpred <- a + b*x
y <- rpois(n, exp(linpred))
plot(x,y,col="blue")
x_ <- seq(-2,2,0.1)
lines(x_, exp(a+b*x_))
segments(x,exp(a+b*x),x,y, lwd=1,lty=3, col="red")
set.seed(2)
n <- 100
x <- runif(n, -1.3, 1.3)
a <- 1
b <- 2
linpred <- a + b*x
y <- rpois(n, exp(linpred))
plot(x,y,col="blue",pch=19)
x_ <- seq(-2,2,0.1)
lines(x_, exp(a+b*x_))
segments(x,exp(a+b*x),x,y, lwd=1,lty=3, col="red")
y_nb01 <- rnbinom(n, mu=exp(linpred), size=20)
plot(x,y_nb01)
y_nb01 <- rnbinom(n, mu=exp(linpred), size=0.5)
plot(x,y_nb01)
y_nb01 <- rnbinom(n, mu=exp(linpred), size=0.1)
plot(x,y_nb01)
?rnbinom
dnbinom(10, size=1 mu=10, log = FALSE)
dnbinom(10, size=1, mu=10, log = FALSE)
dpoisson(10, mu=10, log = FALSE)
dpois(10, mu=10, log = FALSE)
dpois(10, rate=10, log = FALSE)
dpois(10, 10, log = FALSE)
?dpois
dpois(10, lambda=10, log = FALSE)
dnbinom(10, size=Inf, mu=10, log = FALSE)
dnbinom(20, size=Inf, mu=10, log = FALSE)
dpois(20, lambda=10, log = FALSE)
?expression
contrasts(d$condition)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(MASS)
set.seed(2)
n <- 100
x <- runif(n, -1.3, 1.3)
a <- 1
b <- 2
linpred <- a + b*x # linear predictor part
y <- rpois(n, exp(linpred)) # simulate Poisson observations
plot(x,y,col="blue") # plot
x_ <- seq(-2,2,0.1)
lines(x_, exp(a+b*x_))
segments(x,exp(a+b*x),x,y, lwd=1,lty=3, col="red")
set.seed(4)
n <- 100
x <- runif(n, -2, 2)
a <- 1
b <- 2
linpred <- a + b*x # linear predictor part
y0 <- rnbinom(n, mu=exp(linpred), size=0.5) # simulate negative binomial
y1 <- rnbinom(n, mu=exp(linpred), size=1) # simulate negative binomial
y25 <- rnbinom(n, mu=exp(linpred), size=10) # simulate negative binomial
yInf <- rnbinom(n, mu=exp(linpred), size=Inf) # simulate negative binomial
par(mfrow=c(2,2))
x_ <- seq(-2,2,0.1)
plot(x,y0,col="blue", ylim=c(0,400), main=expression(theta==0.5),ylab="y") # plot
lines(x_, exp(a+b*x_))
segments(x,exp(a+b*x),x,y0, lwd=1,lty=3, col="red")
plot(x,y1,col="blue", ylim=c(0,400), main=expression(theta==1),ylab="y") # plot
lines(x_, exp(a+b*x_))
segments(x,exp(a+b*x),x,y1, lwd=1,lty=3, col="red")
plot(x,y25,col="blue", ylim=c(0,400), main=expression(theta==10),ylab="y") # plot
lines(x_, exp(a+b*x_))
segments(x,exp(a+b*x),x,y25, lwd=1,lty=3, col="red")
plot(x,yInf,col="blue", ylim=c(0,400), main=expression(theta %->% infinity),ylab="y") # plot
lines(x_, exp(a+b*x_))
segments(x,exp(a+b*x),x,yInf, lwd=1,lty=3, col="red")
library(tidyverse)
d <- read_csv("nb_units.csv", show_col_types = F)
d
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(MASS)
set.seed(2)
n <- 100
x <- runif(n, -1.3, 1.3)
a <- 1
b <- 2
linpred <- a + b*x # linear predictor part
y <- rpois(n, exp(linpred)) # simulate Poisson observations
plot(x,y,col="blue") # plot
x_ <- seq(-2,2,0.1)
lines(x_, exp(a+b*x_))
segments(x,exp(a+b*x),x,y, lwd=1,lty=3, col="red")
set.seed(4)
n <- 100
x <- runif(n, -2, 2)
a <- 1
b <- 2
linpred <- a + b*x # linear predictor part
y0 <- rnbinom(n, mu=exp(linpred), size=0.5) # simulate negative binomial
y1 <- rnbinom(n, mu=exp(linpred), size=1) # simulate negative binomial
y25 <- rnbinom(n, mu=exp(linpred), size=10) # simulate negative binomial
yInf <- rnbinom(n, mu=exp(linpred), size=Inf) # simulate negative binomial
par(mfrow=c(2,2))
x_ <- seq(-2,2,0.1)
plot(x,y0,col="blue", ylim=c(0,400), main=expression(theta==0.5),ylab="y") # plot
lines(x_, exp(a+b*x_))
segments(x,exp(a+b*x),x,y0, lwd=1,lty=3, col="red")
plot(x,y1,col="blue", ylim=c(0,400), main=expression(theta==1),ylab="y") # plot
lines(x_, exp(a+b*x_))
segments(x,exp(a+b*x),x,y1, lwd=1,lty=3, col="red")
plot(x,y25,col="blue", ylim=c(0,400), main=expression(theta==10),ylab="y") # plot
lines(x_, exp(a+b*x_))
segments(x,exp(a+b*x),x,y25, lwd=1,lty=3, col="red")
plot(x,yInf,col="blue", ylim=c(0,400), main=expression(theta %->% infinity),ylab="y") # plot
lines(x_, exp(a+b*x_))
segments(x,exp(a+b*x),x,yInf, lwd=1,lty=3, col="red")
library(tidyverse)
d <- read_csv("nb_units.csv", show_col_types = F)
d
d %>%
group_by(condition) %>%
summarise(Mean = mean(units),
Variance = var(units)) %>%
knitr::kable(digits=2,
caption="Mean and Variance of weekly units of alcohol reported.")
d %>%
ggplot(aes(x=units, fill=condition)) +
geom_histogram(binwidth=1)+
facet_grid(condition~.) +
theme_minimal()
d$condition <- factor(d$condition) # tell R that this is a categorical factor
contrasts(d$condition)
nb01 <- glm.nb(units ~ condition, data = d)
summary(nb01)
summary(nb01)$coeff
summary(nb01)$coeff["conditionhigh","Estimate"]
nb01
str(nb01)
nb01$coefficients
nb01$coefficients["(Intercept)"]
str(anova(nb01, nb02))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(MASS)
set.seed(2)
n <- 100
x <- runif(n, -1.3, 1.3)
a <- 1
b <- 2
linpred <- a + b*x # linear predictor part
y <- rpois(n, exp(linpred)) # simulate Poisson observations
plot(x,y,col="blue") # plot
x_ <- seq(-2,2,0.1)
lines(x_, exp(a+b*x_))
segments(x,exp(a+b*x),x,y, lwd=1,lty=3, col="red")
set.seed(4)
n <- 100
x <- runif(n, -2, 2)
a <- 1
b <- 2
linpred <- a + b*x # linear predictor part
y0 <- rnbinom(n, mu=exp(linpred), size=0.5) # simulate negative binomial
y1 <- rnbinom(n, mu=exp(linpred), size=1) # simulate negative binomial
y25 <- rnbinom(n, mu=exp(linpred), size=10) # simulate negative binomial
yInf <- rnbinom(n, mu=exp(linpred), size=Inf) # simulate negative binomial
par(mfrow=c(2,2))
x_ <- seq(-2,2,0.1)
plot(x,y0,col="blue", ylim=c(0,400), main=expression(theta==0.5),ylab="y") # plot
lines(x_, exp(a+b*x_))
segments(x,exp(a+b*x),x,y0, lwd=1,lty=3, col="red")
plot(x,y1,col="blue", ylim=c(0,400), main=expression(theta==1),ylab="y") # plot
lines(x_, exp(a+b*x_))
segments(x,exp(a+b*x),x,y1, lwd=1,lty=3, col="red")
plot(x,y25,col="blue", ylim=c(0,400), main=expression(theta==10),ylab="y") # plot
lines(x_, exp(a+b*x_))
segments(x,exp(a+b*x),x,y25, lwd=1,lty=3, col="red")
plot(x,yInf,col="blue", ylim=c(0,400), main=expression(theta %->% infinity),ylab="y") # plot
lines(x_, exp(a+b*x_))
segments(x,exp(a+b*x),x,yInf, lwd=1,lty=3, col="red")
library(tidyverse)
d <- read_csv("nb_units.csv", show_col_types = F)
d
d %>%
group_by(condition) %>%
summarise(Mean = mean(units),
Variance = var(units)) %>%
knitr::kable(digits=2,
caption="Mean and Variance of weekly units of alcohol reported.")
d %>%
ggplot(aes(x=units, fill=condition)) +
geom_histogram(binwidth=1)+
facet_grid(condition~.) +
theme_minimal()
d$condition <- factor(d$condition) # tell R that this is a categorical factor
contrasts(d$condition)
nb01 <- glm.nb(units ~ condition, data = d)
summary(nb01)
nb01$coefficients
exp(nb01$coefficients["(Intercept)"]) # equivalent to exp(nb01$coefficients[1])
exp(nb01$coefficients["conditionhigh"])
exp(nb01$coefficients["(Intercept)"])  * exp(nb01$coefficients["conditionhigh"])
exp(nb01$coefficients["(Intercept)"] + nb01$coefficients["conditionhigh"])
library(sjPlot)
tab_model(nb01)
nb02 <- glm.nb(units ~ condition + gender, data = d)
summary(nb02)
exp(nb02$coefficients["genderMale"])
anova(nb01, nb02)
str9anova(nb01, nb02)
str(anova(nb01, nb02))
nd <- expand.grid(condition=unique(d$condition),
units_q_int = 0:max(d$units),
KEEP.OUT.ATTRS = F)
nd
nd$predicted_units <- predict(nb01, newdata=nd, type="response")
nd <- expand.grid(condition=unique(d$condition),
units = 0:max(d$units),
KEEP.OUT.ATTRS = F)
nd$predicted_units <- predict(nb01, newdata=nd, type="response")
nd$pred_density <- dnbinom(nd$units, mu=nd$predicted_units, size=nb01$theta)
d %>%
ggplot(aes(x=units, fill=condition)) +
geom_histogram(aes(y=..density..),binwidth=1,color="white")+
geom_line(data=nd, aes(x=units, y=pred_density)) +
facet_grid(condition~.) +
theme_minimal() +
coord_cartesian(xlim=c(0,31))
d %>%
ggplot(aes(x=units, fill=condition)) +
geom_histogram(aes(y=..density..),binwidth=1, alpha=0.5)+
geom_line(data=nd, aes(x=units, y=pred_density)) +
facet_grid(condition~.) +
theme_minimal() +
coord_cartesian(xlim=c(0,31))
d %>%
ggplot(aes(x=units, fill=condition, color=condition)) +
geom_histogram(aes(y=..density..),binwidth=1, alpha=0.5)+
geom_line(data=nd, aes(x=units, y=pred_density)) +
facet_grid(condition~.) +
theme_minimal() +
coord_cartesian(xlim=c(0,31))
d %>%
ggplot(aes(x=units, fill=condition, color=condition)) +
geom_histogram(aes(y=..density..),binwidth=1, alpha=0.5)+
geom_line(data=nd, aes(x=units, y=pred_density),size=2) +
facet_grid(condition~.) +
theme_minimal() +
coord_cartesian(xlim=c(0,31))
d %>%
ggplot(aes(x=units, fill=condition, color=condition)) +
geom_histogram(aes(y=..density..),binwidth=1, alpha=0.5)+
geom_line(data=nd, aes(x=units, y=pred_density),size=2) +
facet_grid(condition~.) +
theme_minimal()
d %>%
ggplot(aes(x=units, fill=condition, color=condition)) +
geom_histogram(aes(y=..density..),binwidth=1, color="white")+
geom_line(data=nd, aes(x=units, y=pred_density),size=1) +
facet_grid(condition~.) +
theme_minimal() +
coord_cartesian(xlim=c(0,31))
d %>%
ggplot(aes(x=units, fill=condition)) +
geom_histogram(aes(y=..density..),binwidth=1, color="white")+
geom_line(data=nd, aes(x=units, y=pred_density),size=1) +
facet_grid(condition~.) +
theme_minimal() +
coord_cartesian(xlim=c(0,31))
nd %>%
ggplot(aes(x=units, color=condition))+
geom_line(size=1)+
facet_grid(condition~.) +
theme_minimal() +
coord_cartesian(xlim=c(0,31))
nd %>%
ggplot(aes(x=units, y=pred_density, color=condition))+
geom_line(size=1)+
theme_minimal() +
coord_cartesian(xlim=c(0,31))
nd %>%
ggplot(aes(x=units, y=log(pred_density), color=condition))+
geom_line(size=1)+
theme_minimal() +
coord_cartesian(xlim=c(0,31))
nd %>%
ggplot(aes(x=units, y=log(pred_density), color=condition))+
geom_line(size=1)+
theme_minimal() +
coord_cartesian(xlim=c(0,31),xlim=c(-6,-1.4))
nd %>%
ggplot(aes(x=units, y=log(pred_density), color=condition))+
geom_line(size=1)+
theme_minimal() +
coord_cartesian(xlim=c(0,31),ylim=c(-6,-1.4))
nd %>%
ggplot(aes(x=units, y=log(pred_density), color=condition))+
geom_line(size=1)+
theme_minimal() +
coord_cartesian(xlim=c(0,31),ylim=c(-6,-1.4))+
labs(y="log probability")
nd %>%
ggplot(aes(x=units, y=log(pred_density), color=condition))+
geom_line(size=1)+
theme_minimal() +
coord_cartesian(xlim=c(0,40),ylim=c(-6,-1.4))+
labs(y="log probability")
nd %>%
ggplot(aes(x=units, y=log(pred_density), color=condition))+
geom_line(size=1)+
theme_minimal() +
coord_cartesian(xlim=c(0,40),ylim=c(-7,-1.4))+
labs(y="log probability")
setwd("/mnt/sda2/matteoHDD/git_local_HDD/RHUL-stats/RHUL-stats-notebook")
rm(list=ls())
dir()
#!/usr/bin/env Rscript
rm(list=ls())
setwd("/mnt/sda2/matteoHDD/git_local_HDD/RHUL-stats/RHUL-stats-notebook")
# bookdown::serve_book(dir="/mnt/sda2/matteoHDD/git_local_HDD/RHUL-stats/RHUL-stats-notebook",
#                      output_dir = "../docs")
# servr::daemon_stop(3)
bookdown::render_book("index.Rmd", "bookdown::bs4_book",
output_dir = "../docs",
new_session = TRUE)
bookdown::render_book("index.Rmd", "bookdown::pdf_book",
output_dir = "../",
new_session = TRUE)
options(bookdown.clean_book = TRUE)
bookdown::clean_book()
install.packages("bookdown")
#!/usr/bin/env Rscript
rm(list=ls())
setwd("/mnt/sda2/matteoHDD/git_local_HDD/RHUL-stats/RHUL-stats-notebook")
# bookdown::serve_book(dir="/mnt/sda2/matteoHDD/git_local_HDD/RHUL-stats/RHUL-stats-notebook",
#                      output_dir = "../docs")
# servr::daemon_stop(3)
bookdown::render_book("index.Rmd", "bookdown::bs4_book",
output_dir = "../docs",
new_session = TRUE)
bookdown::render_book("index.Rmd", "bookdown::pdf_book",
output_dir = "../",
new_session = TRUE)
options(bookdown.clean_book = TRUE)
bookdown::clean_book()
rm(list=ls())
setwd("/mnt/sda2/matteoHDD/git_local_HDD/RHUL-stats/RHUL-stats-notebook")
bookdown::serve_book(dir="/mnt/sda2/matteoHDD/git_local_HDD/RHUL-stats/RHUL-stats-notebook",
output_dir = "../docs")
install.packages("downlit")
rm(list=ls())
setwd("/mnt/sda2/matteoHDD/git_local_HDD/RHUL-stats/RHUL-stats-notebook")
bookdown::serve_book(dir="/mnt/sda2/matteoHDD/git_local_HDD/RHUL-stats/RHUL-stats-notebook",
output_dir = "../docs")
d <- read_csv('../data/survey_march22/stats-survey-rhul_edit.csv')
d %>%
filter(Finished==TRUE) %>%
select(starts_with('models_') & !contains('TEXT')) %>%
mutate(id = 1:nrow(.)) %>%
pivot_longer(starts_with('models_'),names_to = 'what') %>%
filter(!is.na(value)) %>%
filter(value!="Other (please specify)") %>%
mutate(value_short = str_extract(value, pattern='^[^:\\.)]*')) %>%
# simplify labels (could be more elegant if I knew regex better)
mutate(value_short = ifelse(str_detect(value_short,"\\((?=e)"),
str_sub(value_short,1,-1 -2),
value_short)) %>%
mutate(value_short = ifelse(str_detect(value_short,"\\("),
str_c(value_short,")"),
value_short)) %>%
group_by(value_short) %>%
summarise(N = length(id)) %>%
arrange(N) %>%
mutate(value_short=as_factor(value_short)) %>%
ggplot(aes(y=value_short, x=N))+
theme_gray(12) +
geom_col() +
scale_y_discrete(labels = function(x) lapply(strwrap(x, width = 30, simplify = FALSE), paste, collapse="\n")) +
labs(y="")
str(d)
d %>%
filter(Finished==TRUE) %>%
select(starts_with('models_') & !contains('TEXT'))
library(tidyverse)
d <- read_csv('../data/survey_march22/stats-survey-rhul_edit.csv')
d %>%
filter(Finished==TRUE) %>%
select(starts_with('models_'))
?select
starts_with
d %>%
filter(Finished==TRUE) %>%
select(starts_with('models_') & !contains('TEXT'),.)
d %>%
filter(Finished==TRUE)
d %>%
filter(Finished==TRUE) %>%
select(starts_with('models_') & !contains('TEXT'))
d %>%
filter(Finished==TRUE) %>%
dplyr::select(starts_with('models_') & !contains('TEXT')) %>%
mutate(id = 1:nrow(.)) %>%
pivot_longer(starts_with('models_'),names_to = 'what') %>%
filter(!is.na(value)) %>%
filter(value!="Other (please specify)") %>%
mutate(value_short = str_extract(value, pattern='^[^:\\.)]*')) %>%
# simplify labels (could be more elegant if I knew regex better)
mutate(value_short = ifelse(str_detect(value_short,"\\((?=e)"),
str_sub(value_short,1,-1 -2),
value_short)) %>%
mutate(value_short = ifelse(str_detect(value_short,"\\("),
str_c(value_short,")"),
value_short)) %>%
group_by(value_short) %>%
summarise(N = length(id)) %>%
arrange(N) %>%
mutate(value_short=as_factor(value_short)) %>%
ggplot(aes(y=value_short, x=N))+
theme_gray(12) +
geom_col() +
scale_y_discrete(labels = function(x) lapply(strwrap(x, width = 30, simplify = FALSE), paste, collapse="\n")) +
labs(y="")
rm(list=ls())
setwd("/mnt/sda2/matteoHDD/git_local_HDD/RHUL-stats/RHUL-stats-notebook")
# bookdown::serve_book(dir="/mnt/sda2/matteoHDD/git_local_HDD/RHUL-stats/RHUL-stats-notebook",
#                      output_dir = "../docs")
# servr::daemon_stop(3)
bookdown::render_book("index.Rmd", "bookdown::bs4_book",
output_dir = "../docs",
new_session = TRUE)
d <- read_csv("https://raw.githubusercontent.com/mattelisi/RHUL-stats/main/data/nb_units.csv", show_col_types = F)
rm(list=ls())
setwd("/mnt/sda2/matteoHDD/git_local_HDD/RHUL-stats/RHUL-stats-notebook")
# bookdown::serve_book(dir="/mnt/sda2/matteoHDD/git_local_HDD/RHUL-stats/RHUL-stats-notebook",
#                      output_dir = "../docs")
# servr::daemon_stop(3)
bookdown::render_book("index.Rmd", "bookdown::bs4_book",
output_dir = "../docs",
new_session = TRUE)
rm(list=ls())
setwd("/mnt/sda2/matteoHDD/git_local_HDD/RHUL-stats/RHUL-stats-notebook")
# bookdown::serve_book(dir="/mnt/sda2/matteoHDD/git_local_HDD/RHUL-stats/RHUL-stats-notebook",
#                      output_dir = "../docs")
# servr::daemon_stop(3)
bookdown::render_book("index.Rmd", "bookdown::bs4_book",
output_dir = "../docs",
new_session = TRUE)
bookdown::render_book("index.Rmd", "bookdown::pdf_book",
output_dir = "../",
new_session = TRUE)
options(bookdown.clean_book = TRUE)
bookdown::clean_book()
setwd("/mnt/sda2/matteoHDD/git_local_HDD/RHUL-stats/")
system("rm *.md")
system("rm *.tex")
system("git add -A")
system('git commit -m "update (auto)"')
system("git push origin main")
